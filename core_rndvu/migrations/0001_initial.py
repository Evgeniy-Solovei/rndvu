# Generated by Django 5.2.5 on 2025-08-14 22:18

import core_rndvu.validators
import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tg_id', models.PositiveBigIntegerField(unique=True, verbose_name='Telegram ID')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Имя игрока')),
                ('username', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nickname игрока')),
                ('language_code', models.CharField(default='ru', max_length=30, verbose_name='Язык пользователя')),
                ('gender', models.CharField(blank=True, choices=[('Man', 'Мужчина'), ('Woman', 'Женщина')], max_length=10, null=True, verbose_name='Пол пользователя')),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации игрока')),
                ('hide_age_in_profile', models.BooleanField(default=True, verbose_name='Показывать возраст да/нет')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный профиль да/нет')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'indexes': [models.Index(fields=['tg_id'], name='core_rndvu__tg_id_2365e6_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProfileMan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.DateField(blank=True, null=True, validators=[core_rndvu.validators.validate_birth_date], verbose_name='Дата рождения')),
                ('about', models.TextField(blank=True, max_length=1000, null=True, verbose_name='О себе')),
                ('player', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='man_profile', to='core_rndvu.player', verbose_name='Владелец анкеты')),
            ],
            options={
                'verbose_name': 'Мужская анкета',
                'verbose_name_plural': 'Мужские анкеты',
            },
        ),
        migrations.CreateModel(
            name='ManPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='men_photos/', validators=[core_rndvu.validators.validate_photo_size], verbose_name='Фото')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='core_rndvu.profileman')),
            ],
            options={
                'verbose_name': 'Фото мужского профиля',
                'verbose_name_plural': 'Фото мужских профилей',
            },
        ),
        migrations.CreateModel(
            name='ProfileWoman',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.DateField(blank=True, null=True, validators=[core_rndvu.validators.validate_birth_date], verbose_name='Дата рождения')),
                ('height', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(250)], verbose_name='Рост (см)')),
                ('weight', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(200)], verbose_name='Вес (кг)')),
                ('bust_size', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Обхват груди (см)')),
                ('waist_size', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Обхват талии (см)')),
                ('hips_size', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Обхват бедер (см)')),
                ('languages', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('RU', 'Русский'), ('EN', 'Английский'), ('FR', 'Французский'), ('DE', 'Немецкий'), ('ES', 'Испанский'), ('IT', 'Итальянский'), ('ZH', 'Китайский'), ('JA', 'Японский'), ('AR', 'Арабский'), ('PT', 'Португальский')], max_length=2), blank=True, default=list, null=True, size=None, verbose_name='Языки')),
                ('interests', models.CharField(blank=True, max_length=255, null=True, verbose_name='Интересы')),
                ('about', models.TextField(blank=True, max_length=2000, null=True, verbose_name='О себе')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='woman_profile', to='core_rndvu.player', verbose_name='Владелец анкеты')),
            ],
            options={
                'verbose_name': 'Женская анкета',
                'verbose_name_plural': 'Женские анкеты',
            },
        ),
        migrations.CreateModel(
            name='WomanPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='women_photos/', validators=[core_rndvu.validators.validate_photo_size], verbose_name='Фото')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='core_rndvu.profilewoman', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Фото женского профиля',
                'verbose_name_plural': 'Фото женских профилей',
            },
        ),
        migrations.CreateModel(
            name='PhotoReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction_type', models.CharField(choices=[('like', 'Лайк'), ('dislike', 'Дизлайк')], max_length=10, verbose_name='Тип реакции')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания реакции')),
                ('man_photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='core_rndvu.manphoto', verbose_name='Мужское фото')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_reactions', to='core_rndvu.player', verbose_name='Пользователь поставивший реакцию')),
                ('woman_photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='core_rndvu.womanphoto', verbose_name='Женское фото')),
            ],
            options={
                'verbose_name': 'Реакция на фото',
                'verbose_name_plural': 'Реакции на фото',
                'indexes': [models.Index(fields=['player', 'reaction_type'], name='core_rndvu__player__d4778f_idx'), models.Index(fields=['man_photo', 'reaction_type'], name='core_rndvu__man_pho_6bc810_idx'), models.Index(fields=['woman_photo', 'reaction_type'], name='core_rndvu__woman_p_4906a4_idx')],
                'constraints': [models.UniqueConstraint(fields=('player', 'man_photo'), name='unique_player_man_photo_reaction'), models.UniqueConstraint(fields=('player', 'woman_photo'), name='unique_player_woman_photo_reaction')],
            },
        ),
    ]
