# Generated by Django 5.2.5 on 2025-08-29 19:10

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core_rndvu', '0004_manphoto_main_photo_womanphoto_main_photo_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название товара')),
                ('subscription_type', models.CharField(blank=True, choices=[('monthly', '1 месяц'), ('yearly', '1 год')], max_length=20, null=True, verbose_name='Тип подписки')),
                ('duration_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='Количество дней')),
                ('price', models.PositiveIntegerField(verbose_name='Цена в рублях')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
            },
        ),
        migrations.AddField(
            model_name='player',
            name='count_days_paid_subscription',
            field=models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Остаток дней платной подписки'),
        ),
        migrations.AddField(
            model_name='player',
            name='paid_subscription',
            field=models.BooleanField(default=False, verbose_name='Платная подписка/нет'),
        ),
        migrations.AddField(
            model_name='player',
            name='subscription_end_date',
            field=models.DateField(blank=True, null=True, verbose_name='Дата окончания подписки'),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=150, verbose_name='Город')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата ивента')),
                ('duration', models.IntegerField(blank=True, choices=[(1, '1 час'), (2, '2 часа'), (3, '3 часа'), (4, '4 часа'), (5, '5+ часов'), (24, '24 часа')], null=True, verbose_name='Длительность ивента')),
                ('exact_time', models.TimeField(blank=True, null=True, verbose_name='Точное время встречи')),
                ('place', models.CharField(blank=True, choices=[('restaurant', 'Ресторан'), ('cafe', 'Кофейня'), ('hotel', 'Отель'), ('apartments', 'Апартаменты'), ('restaurant_and_apartments', 'Ресторан и апартаменты'), ('yacht', 'Яхта'), ('villa', 'Вилла'), ('bath_complex', 'Банный комплекс'), ('private_house', 'Частный дом'), ('country_complex', 'Загородный комплекс'), ('private_sector', 'Частный сектор'), ('club', 'Клуб'), ('club_and_hotel', 'Клуб и отель'), ('travel_together', 'Совместная поездка')], max_length=50, null=True, verbose_name='Место ивента')),
                ('min_age', models.IntegerField(default=18, validators=[django.core.validators.MinValueValidator(18), django.core.validators.MaxValueValidator(99)], verbose_name='Минимальный возраст')),
                ('max_age', models.IntegerField(default=99, validators=[django.core.validators.MinValueValidator(18), django.core.validators.MaxValueValidator(99)], verbose_name='Максимальный возраст')),
                ('reward', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Награда за ивент')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание ивента')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный/нет')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_events', to='core_rndvu.player', verbose_name='Создатель ивента')),
            ],
            options={
                'verbose_name': 'Ивент',
                'verbose_name_plural': 'Ивенты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(max_length=100, unique=True, verbose_name='ID платежа в ЮKassa')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата покупки')),
                ('is_successful', models.BooleanField(default=False, verbose_name='Успешно оплачено')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='core_rndvu.player', verbose_name='Пользователь')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core_rndvu.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Оплата',
                'verbose_name_plural': 'Оплаты',
            },
        ),
        migrations.DeleteModel(
            name='PhotoReaction',
        ),
        migrations.AddConstraint(
            model_name='purchase',
            constraint=models.UniqueConstraint(fields=('payment_id',), name='unique_payment'),
        ),
    ]
